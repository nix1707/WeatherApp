{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport axios from 'axios';\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Weather from \"./components/Weather\";\nimport SearchBar from \"./components/SearchBar\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar api = {\n  base: 'https://api.openweathermap.org/data/2.5/',\n  key: '8362548a7b905dfc6194cf4b0fd5a23e'\n};\nexport default function App() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    weatherData = _useState2[0],\n    setWeatherData = _useState2[1];\n  if (weatherData == null) {\n    return _jsx(View, {\n      style: styles.container,\n      children: _jsx(ActivityIndicator, {\n        color: \"gray\",\n        size: 36\n      })\n    });\n  } else if (weatherData === null) {\n    return _jsx(View, {\n      style: styles.container,\n      children: _jsx(Text, {\n        style: styles.primaryText,\n        children: \"City Not Found! Try Different City\"\n      })\n    });\n  }\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Weather, {\n      weatherData: weatherData,\n      fetchWeatherData: fetchWeatherData\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  primaryText: {\n    margin: 20,\n    fontSize: 28\n  }\n});","map":{"version":3,"names":["axios","StatusBar","React","useState","useEffect","StyleSheet","Text","View","ActivityIndicator","Weather","SearchBar","jsx","_jsx","api","base","key","App","_useState","_useState2","_slicedToArray","weatherData","setWeatherData","style","styles","container","children","color","size","primaryText","fetchWeatherData","create","flex","backgroundColor","alignItems","justifyContent","margin","fontSize"],"sources":["C:/Users/admin/Desktop/Weather Forecast/weatherApp/App.js"],"sourcesContent":["import axios from 'axios';\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, ActivityIndicator } from 'react-native';\nimport Weather from './components/Weather';\nimport SearchBar from './components/SearchBar'\n\nconst api = {\n  base: 'https://api.openweathermap.org/data/2.5/',\n  key:'8362548a7b905dfc6194cf4b0fd5a23e' \n}\n\nexport default function App() {\n\n    const [weatherData, setWeatherData] = useState(null);\n\n    // async function fetchWeather(cityName){\n    //   axios.get(`${api.base}weather?q=${cityName}&units=metric&appid=${api.key}`)\n    //   .then(res => {\n    //     setWeatherData(res.data); \n    //     console.log(res.data)\n    //   })\n    //   .catch(error => console.log(error))\n    // }\n\n    // useEffect(() => {\n    //   fetchWeather('Kyiv')\n    // },[])\n\n    \n    if(weatherData == null) {\n        return (\n            <View style={styles.container}>\n                <ActivityIndicator color='gray'  size={36} />\n            </View>\n\n        )\n    }\n\n    else if(weatherData === null) {\n        return (\n            <View style={styles.container}>\n                {/* <SearchBar fetchWeatherData={fetchWeatherData}/> */}\n                <Text style={styles.primaryText}>City Not Found! Try Different City</Text>\n            </View>\n        )\n    }\n\n    return (\n        <View style={styles.container}>\n            <Weather weatherData={weatherData} fetchWeatherData={fetchWeatherData}  />\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  primaryText: {\n      margin: 20,\n      fontSize: 28\n  }\n});"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,iBAAA;AAEnD,OAAOC,OAAO;AACd,OAAOC,SAAS;AAA8B,SAAAC,GAAA,IAAAC,IAAA;AAE9C,IAAMC,GAAG,GAAG;EACVC,IAAI,EAAE,0CAA0C;EAChDC,GAAG,EAAC;AACN,CAAC;AAED,eAAe,SAASC,GAAGA,CAAA,EAAG;EAE1B,IAAAC,SAAA,GAAsCd,QAAQ,CAAC,IAAI,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7CG,WAAW,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA;EAgBlC,IAAGE,WAAW,IAAI,IAAI,EAAE;IACpB,OACIR,IAAA,CAACL,IAAI;MAACe,KAAK,EAAEC,MAAM,CAACC,SAAU;MAAAC,QAAA,EAC1Bb,IAAA,CAACJ,iBAAiB;QAACkB,KAAK,EAAC,MAAM;QAAEC,IAAI,EAAE;MAAG,CAAE;IAAC,CAC3C,CAAC;EAGf,CAAC,MAEI,IAAGP,WAAW,KAAK,IAAI,EAAE;IAC1B,OACIR,IAAA,CAACL,IAAI;MAACe,KAAK,EAAEC,MAAM,CAACC,SAAU;MAAAC,QAAA,EAE1Bb,IAAA,CAACN,IAAI;QAACgB,KAAK,EAAEC,MAAM,CAACK,WAAY;QAAAH,QAAA,EAAC;MAAkC,CAAM;IAAC,CACxE,CAAC;EAEf;EAEA,OACIb,IAAA,CAACL,IAAI;IAACe,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAC1Bb,IAAA,CAACH,OAAO;MAACW,WAAW,EAAEA,WAAY;MAACS,gBAAgB,EAAEA;IAAiB,CAAG;EAAC,CACxE,CAAC;AAEf;AAEA,IAAMN,MAAM,GAAGlB,UAAU,CAACyB,MAAM,CAAC;EAC/BN,SAAS,EAAE;IACTO,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDN,WAAW,EAAE;IACTO,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE;EACd;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}