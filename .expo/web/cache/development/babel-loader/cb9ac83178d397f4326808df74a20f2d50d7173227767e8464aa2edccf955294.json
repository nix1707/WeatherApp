{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar API_KEY = \"596a1c3168222361a9bae46f197dc6ca\";\nexport default function App() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    weatherData = _useState2[0],\n    setWeatherData = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loaded = _useState4[0],\n    setLoaded = _useState4[1];\n  function fetchWeatherData(_x) {\n    return _fetchWeatherData.apply(this, arguments);\n  }\n  function _fetchWeatherData() {\n    _fetchWeatherData = _asyncToGenerator(function* (cityName) {\n      setLoaded(false);\n      var API = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&units=metric&appid=${API_KEY}`;\n      try {\n        var response = yield fetch(API);\n        if (response.status == 200) {\n          var data = yield response.json();\n          setWeatherData(data);\n        } else {\n          setWeatherData(null);\n        }\n        setLoaded(true);\n      } catch (error) {\n        console.log(error);\n      }\n    });\n    return _fetchWeatherData.apply(this, arguments);\n  }\n  useEffect(function () {\n    fetchWeatherData('Mumbai');\n    console.log(weatherData);\n  }, []);\n  if (!loaded) {\n    return _jsx(View, {\n      style: styles.container,\n      children: _jsx(ActivityIndicator, {\n        color: \"gray\",\n        size: 36\n      })\n    });\n  } else if (weatherData === null) {\n    return _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(SearchBar, {\n        fetchWeatherData: fetchWeatherData\n      }), _jsx(Text, {\n        style: styles.primaryText,\n        children: \"City Not Found! Try Different City\"\n      })]\n    });\n  }\n  return _jsx(View, {\n    style: styles.container\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  primaryText: {\n    margin: 20,\n    fontSize: 28\n  }\n});","map":{"version":3,"names":["StatusBar","React","useState","useEffect","StyleSheet","Text","View","ActivityIndicator","jsx","_jsx","jsxs","_jsxs","API_KEY","App","_useState","_useState2","_slicedToArray","weatherData","setWeatherData","_useState3","_useState4","loaded","setLoaded","fetchWeatherData","_x","_fetchWeatherData","apply","arguments","_asyncToGenerator","cityName","API","response","fetch","status","data","json","error","console","log","style","styles","container","children","color","size","SearchBar","primaryText","create","flex","backgroundColor","alignItems","justifyContent","margin","fontSize"],"sources":["C:/Users/admin/Desktop/Weather Forecast/weatherApp/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, ActivityIndicator } from 'react-native';\n// import Weather from './components/Weather';\n// import SearchBar from './components/SearchBar';\n\nconst API_KEY = \"596a1c3168222361a9bae46f197dc6ca\";\n\n\nexport default function App() {\n\n    const [weatherData, setWeatherData] = useState(null);\n    const [loaded, setLoaded] = useState(true);\n\n    async function fetchWeatherData(cityName) {\n        setLoaded(false);\n        const API = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&units=metric&appid=${API_KEY}`\n        try {\n            const response = await fetch(API);\n            if(response.status == 200) {\n                const data = await response.json();\n                setWeatherData(data);\n            } else {\n                setWeatherData(null);\n            }\n            setLoaded(true);\n            \n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    useEffect(() => {\n        fetchWeatherData('Mumbai');\n        console.log(weatherData)\n    }, [])\n    \n\n    if(!loaded) {\n        return (\n            <View style={styles.container}>\n                <ActivityIndicator color='gray'  size={36} />\n            </View>\n\n        )\n    }\n\n    else if(weatherData === null) {\n        return (\n            <View style={styles.container}>\n                <SearchBar fetchWeatherData={fetchWeatherData}/>\n                <Text style={styles.primaryText}>City Not Found! Try Different City</Text>\n            </View>\n        )\n    }\n\n    return (\n        <View style={styles.container}>\n            {/* <Weather weatherData={weatherData} fetchWeatherData={fetchWeatherData}  /> */}\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  primaryText: {\n      margin: 20,\n      fontSize: 28\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}