{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar API_KEY = \"8362548a7b905dfc6194cf4b0fd5a23e\";\nexport default function App() {\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    weatherData = _useState2[0],\n    setWeatherData = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loaded = _useState4[0],\n    setLoaded = _useState4[1];\n  useEffect(function () {\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=Lviv&units=metric&appid=${API_KEY}`).then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      setWeatherData(result);\n      console.log;\n    });\n  }, []);\n  if (!loaded) {\n    return _jsx(View, {\n      style: styles.container,\n      children: _jsx(ActivityIndicator, {\n        color: \"gray\",\n        size: 36\n      })\n    });\n  } else if (weatherData === null) {\n    return _jsx(View, {\n      style: styles.container,\n      children: _jsx(Text, {\n        style: styles.primaryText,\n        children: \"City Not Found! Try Different City\"\n      })\n    });\n  }\n  return _jsx(View, {\n    style: styles.container\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  primaryText: {\n    margin: 20,\n    fontSize: 28\n  }\n});","map":{"version":3,"names":["StatusBar","React","useState","useEffect","StyleSheet","Text","View","ActivityIndicator","jsx","_jsx","API_KEY","App","_useState","_useState2","_slicedToArray","weatherData","setWeatherData","_useState3","_useState4","loaded","setLoaded","fetch","then","res","json","result","console","log","style","styles","container","children","color","size","primaryText","create","flex","backgroundColor","alignItems","justifyContent","margin","fontSize"],"sources":["C:/Users/admin/Desktop/Weather Forecast/weatherApp/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, ActivityIndicator } from 'react-native';\n// import Weather from './components/Weather';\n// import SearchBar from './components/SearchBar';\n\nconst API_KEY = \"8362548a7b905dfc6194cf4b0fd5a23e\";\n\n\nexport default function App() {\n\n    const [weatherData, setWeatherData] = useState({});\n    const [loaded, setLoaded] = useState(true);\n\n    useEffect(() => {\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=Lviv&units=metric&appid=${API_KEY}`)\n        .then(res => res.json())\n        .then(result => {\n          setWeatherData(result)\n          console.log\n        })\n        \n    }, [])\n    \n\n    if(!loaded) {\n        return (\n            <View style={styles.container}>\n                <ActivityIndicator color='gray'  size={36} />\n            </View>\n\n        )\n    }\n\n    else if(weatherData === null) {\n        return (\n            <View style={styles.container}>\n                {/* <SearchBar fetchWeatherData={fetchWeatherData}/> */}\n                <Text style={styles.primaryText}>City Not Found! Try Different City</Text>\n            </View>\n        )\n    }\n\n    return (\n        <View style={styles.container}>\n            {/* <Weather weatherData={weatherData} fetchWeatherData={fetchWeatherData}  /> */}\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  primaryText: {\n      margin: 20,\n      fontSize: 28\n  }\n});"],"mappings":";AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,iBAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAKnD,IAAMC,OAAO,GAAG,kCAAkC;AAGlD,eAAe,SAASC,GAAGA,CAAA,EAAG;EAE1B,IAAAC,SAAA,GAAsCV,QAAQ,CAAC,CAAC,CAAC,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA3CG,WAAW,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA;EAClC,IAAAI,UAAA,GAA4Bf,QAAQ,CAAC,IAAI,CAAC;IAAAgB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAnCE,MAAM,GAAAD,UAAA;IAAEE,SAAS,GAAAF,UAAA;EAExBf,SAAS,CAAC,YAAM;IACZkB,KAAK,CAAE,6EAA4EX,OAAQ,EAAC,CAAC,CAC5FY,IAAI,CAAC,UAAAC,GAAG;MAAA,OAAIA,GAAG,CAACC,IAAI,CAAC,CAAC;IAAA,EAAC,CACvBF,IAAI,CAAC,UAAAG,MAAM,EAAI;MACdT,cAAc,CAACS,MAAM,CAAC;MACtBC,OAAO,CAACC,GAAG;IACb,CAAC,CAAC;EAEN,CAAC,EAAE,EAAE,CAAC;EAGN,IAAG,CAACR,MAAM,EAAE;IACR,OACIV,IAAA,CAACH,IAAI;MAACsB,KAAK,EAAEC,MAAM,CAACC,SAAU;MAAAC,QAAA,EAC1BtB,IAAA,CAACF,iBAAiB;QAACyB,KAAK,EAAC,MAAM;QAAEC,IAAI,EAAE;MAAG,CAAE;IAAC,CAC3C,CAAC;EAGf,CAAC,MAEI,IAAGlB,WAAW,KAAK,IAAI,EAAE;IAC1B,OACIN,IAAA,CAACH,IAAI;MAACsB,KAAK,EAAEC,MAAM,CAACC,SAAU;MAAAC,QAAA,EAE1BtB,IAAA,CAACJ,IAAI;QAACuB,KAAK,EAAEC,MAAM,CAACK,WAAY;QAAAH,QAAA,EAAC;MAAkC,CAAM;IAAC,CACxE,CAAC;EAEf;EAEA,OACItB,IAAA,CAACH,IAAI;IAACsB,KAAK,EAAEC,MAAM,CAACC;EAAU,CAExB,CAAC;AAEf;AAEA,IAAMD,MAAM,GAAGzB,UAAU,CAAC+B,MAAM,CAAC;EAC/BL,SAAS,EAAE;IACTM,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDL,WAAW,EAAE;IACTM,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE;EACd;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}