{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport Background from \"./background/Background\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Main = function Main(_ref) {\n  var data = _ref.data;\n  var weather = data.weather,\n    name = data.name,\n    _data$main = data.main,\n    temp = _data$main.temp,\n    humidity = _data$main.humidity,\n    speed = data.wind.speed;\n  var _weather = _slicedToArray(weather, 1),\n    _weather$ = _weather[0],\n    main = _weather$.main,\n    description = _weather$.description,\n    icon = _weather$.icon;\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Background, {\n      props: _jsx(View, {\n        children: _jsxs(View, {\n          style: styles.baseInfo,\n          children: [_jsx(Image, {\n            source: require(\"../../assets/cloud.png\"),\n            style: styles.image\n          }), _jsx(Text, {\n            style: {\n              fontSize: 22,\n              color: 'white'\n            },\n            children: temp\n          })]\n        })\n      })\n    })\n  });\n};\nexport default Main;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  weatherContainer: {\n    backgroundColor: 'rgba(255, 255, 255,0.3)',\n    height: '100px',\n    padding: '50px',\n    width: '100px'\n  },\n  text: {\n    fontSize: 36,\n    color: 'white',\n    top: 50,\n    left: 10\n  },\n  image: {\n    height: 100,\n    width: 100,\n    marginBottom: 20\n  },\n  extraInfo: {\n    flexDirection: 'row',\n    marginTop: 20,\n    justifyContent: 'space-between',\n    padding: 10,\n    width: '80%'\n  },\n  info: {\n    width: '80%',\n    backgroundColor: 'rgba(0,0,0, 0.5)',\n    padding: 10,\n    borderRadius: 15,\n    justifyContent: 'center'\n  },\n  baseInfo: {\n    width: '80%',\n    backgroundColor: 'rgba(0,0,0, 0.5)',\n    padding: 10,\n    borderRadius: 15,\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","Background","Image","View","StyleSheet","Text","Button","Dimensions","LinearGradient","jsx","_jsx","jsxs","_jsxs","Main","_ref","data","weather","name","_data$main","main","temp","humidity","speed","wind","_weather","_slicedToArray","_weather$","description","icon","style","styles","container","children","props","baseInfo","source","require","image","fontSize","color","create","flex","alignItems","weatherContainer","backgroundColor","height","padding","width","text","top","left","marginBottom","extraInfo","flexDirection","marginTop","justifyContent","info","borderRadius"],"sources":["C:/Users/admin/Desktop/Weather Forecast/weatherApp/components/main/Main.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Background from './background/Background'\r\nimport { Image, View, StyleSheet, Text, Button, Dimensions } from 'react-native'\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\n\r\n\r\nconst Main = ({ data }) => {\r\n    const { weather,\r\n        name,\r\n        main: { temp, humidity },\r\n        wind: { speed }\r\n    } = data;\r\n    const [{ main, description, icon }] = weather;\r\n    // const[{description}] = weather;\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Background props={\r\n                <View>\r\n                    {/* <Text style={styles.text}>City: {name}</Text>\r\n                    <Text style={styles.text}>{temp}</Text>\r\n                    <Text style={styles.text}>{description}</Text>\r\n                    <Text style={styles.text}>{icon}</Text> */}\r\n\r\n                    <View style={styles.baseInfo}>\r\n                        <Image source={require('../../assets/cloud.png')} style={styles.image} />\r\n\r\n                        <Text style={{ fontSize: 22, color: 'white' }}>{temp}</Text>\r\n                    </View>\r\n                </View>\r\n            } />\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Main\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        // justifyContent: 'center',\r\n    },\r\n    weatherContainer: {\r\n        backgroundColor: 'rgba(255, 255, 255,0.3)',\r\n        height: '100px',\r\n        padding: '50px',\r\n        width: '100px',\r\n    },\r\n    text: {\r\n        fontSize: 36,\r\n        color: 'white',\r\n        top: 50,\r\n        left: 10,\r\n    },\r\n    image: {\r\n        // position: 'relative',\r\n        // right: 10,\r\n        // top: 25,\r\n        height: 100,\r\n        width: 100,\r\n        marginBottom: 20,\r\n    },\r\n    extraInfo: {\r\n        flexDirection: 'row',\r\n        marginTop: 20,\r\n        justifyContent: 'space-between',\r\n        padding: 10,\r\n        width: '80%',\r\n    },\r\n    info: {\r\n        // width: Dimensions.get('screen').width / 2.5,\r\n        width: '80%',\r\n        backgroundColor: 'rgba(0,0,0, 0.5)',\r\n        padding: 10,\r\n        borderRadius: 15,\r\n        justifyContent: 'center'\r\n    },\r\n    baseInfo: {\r\n        width: '80%',\r\n        backgroundColor: 'rgba(0,0,0, 0.5)',\r\n        padding: 10,\r\n        borderRadius: 15,\r\n        justifyContent: 'center'\r\n    }\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}