{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar API_KEY = \"e20c41068efa08bf042014ef455a20ae\";\nexport default function App() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    weatherData = _useState2[0],\n    setWeatherData = _useState2[1];\n  function fetchWeatherData(_x) {\n    return _fetchWeatherData.apply(this, arguments);\n  }\n  function _fetchWeatherData() {\n    _fetchWeatherData = _asyncToGenerator(function* (cityName) {\n      var API = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=ea56363da30ed710b9b278e52b7b4b05`;\n      try {\n        var data = yield axios.get(API).data;\n        setWeatherData(data);\n      } catch (error) {\n        console.log(error);\n      }\n    });\n    return _fetchWeatherData.apply(this, arguments);\n  }\n  useEffect(function () {\n    fetchWeatherData('lviv');\n    console.log(weatherData);\n  }, []);\n  if (weatherData == null) return _jsx(View, {\n    style: styles.container,\n    children: _jsx(ActivityIndicator, {\n      color: \"gray\",\n      size: 36\n    })\n  });\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {}), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","Text","View","ActivityIndicator","React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","API_KEY","App","_useState","_useState2","_slicedToArray","weatherData","setWeatherData","fetchWeatherData","_x","_fetchWeatherData","apply","arguments","_asyncToGenerator","cityName","API","data","get","error","console","log","style","styles","container","children","color","size","create","flex","backgroundColor","alignItems","justifyContent"],"sources":["C:/Users/admin/Desktop/Weather Forecast/weatherApp/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, ActivityIndicator } from 'react-native';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst API_KEY = \"e20c41068efa08bf042014ef455a20ae\";\n\n\nexport default function App() {\n\n  const [weatherData, setWeatherData] = useState(null);\n  // const [loaded, setLoaded] = useState(true);\n\n  async function fetchWeatherData(cityName) {\n    // setLoaded(false);\n    const API = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=ea56363da30ed710b9b278e52b7b4b05`;\n\n    try {\n      // setLoaded(false);\n      const data = await axios.get(API).data;\n      setWeatherData(data);\n      // setLoaded(true);\n    } catch (error) { console.log(error) }\n  }\n\n  useEffect(() => {\n    fetchWeatherData('lviv')\n    console.log(weatherData);\n  }, [])\n\n  if (weatherData == null)\n    return (\n      <View style={styles.container}>\n        <ActivityIndicator color='gray' size={36}></ActivityIndicator>\n      </View>\n    )\n\n  return (\n    <View style={styles.container}>\n      <Text></Text>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,iBAAA;AAE5C,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE1B,IAAMC,OAAO,GAAG,kCAAkC;AAGlD,eAAe,SAASC,GAAGA,CAAA,EAAG;EAE5B,IAAAC,SAAA,GAAsCT,QAAQ,CAAC,IAAI,CAAC;IAAAU,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7CG,WAAW,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA;EAAmB,SAGtCI,gBAAgBA,CAAAC,EAAA;IAAA,OAAAC,iBAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAF,kBAAA;IAAAA,iBAAA,GAAAG,iBAAA,CAA/B,WAAgCC,QAAQ,EAAE;MAExC,IAAMC,GAAG,GAAI,qDAAoDD,QAAS,yCAAwC;MAElH,IAAI;QAEF,IAAME,IAAI,SAASpB,KAAK,CAACqB,GAAG,CAACF,GAAG,CAAC,CAACC,IAAI;QACtCT,cAAc,CAACS,IAAI,CAAC;MAEtB,CAAC,CAAC,OAAOE,KAAK,EAAE;QAAEC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAAC;IACvC,CAAC;IAAA,OAAAR,iBAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAEDjB,SAAS,CAAC,YAAM;IACda,gBAAgB,CAAC,MAAM,CAAC;IACxBW,OAAO,CAACC,GAAG,CAACd,WAAW,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIA,WAAW,IAAI,IAAI,EACrB,OACER,IAAA,CAACP,IAAI;IAAC8B,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAC5B1B,IAAA,CAACN,iBAAiB;MAACiC,KAAK,EAAC,MAAM;MAACC,IAAI,EAAE;IAAG,CAAoB;EAAC,CAC1D,CAAC;EAGX,OACE1B,KAAA,CAACT,IAAI;IAAC8B,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5B1B,IAAA,CAACR,IAAI,IAAO,CAAC,EACbQ,IAAA,CAACV,SAAS;MAACiC,KAAK,EAAC;IAAM,CAAE,CAAC;EAAA,CACtB,CAAC;AAEX;AAEA,IAAMC,MAAM,GAAGjC,UAAU,CAACsC,MAAM,CAAC;EAC/BJ,SAAS,EAAE;IACTK,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}