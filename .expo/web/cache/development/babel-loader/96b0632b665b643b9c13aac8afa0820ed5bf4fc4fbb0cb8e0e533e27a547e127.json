{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport axios from 'axios';\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Main from \"./components/main/Main\";\nimport { WeatherService } from \"./services/weather.service\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setWeatherData = _useState2[1];\n  function test() {\n    return _test.apply(this, arguments);\n  }\n  function _test() {\n    _test = _asyncToGenerator(function* () {\n      var weather = yield WeatherService.getData('Kyiv');\n      setWeatherData(weather);\n    });\n    return _test.apply(this, arguments);\n  }\n  useEffect(function () {\n    var fetchData = function () {\n      var _ref = _asyncToGenerator(function* () {\n        WeatherService.getData('Kyiv');\n      });\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchData();\n  }, []);\n  if (data == null) {\n    return _jsx(View, {\n      style: styles.container,\n      children: _jsx(ActivityIndicator, {\n        color: \"gray\",\n        size: 36\n      })\n    });\n  }\n  return _jsx(View, {\n    style: styles.container,\n    children: console.log(data.main.temp)\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  primaryText: {\n    margin: 20,\n    fontSize: 28\n  }\n});","map":{"version":3,"names":["axios","StatusBar","React","useState","useEffect","StyleSheet","Text","View","ActivityIndicator","Main","WeatherService","jsx","_jsx","App","_useState","_useState2","_slicedToArray","data","setWeatherData","test","_test","apply","arguments","_asyncToGenerator","weather","getData","fetchData","_ref","style","styles","container","children","color","size","console","log","main","temp","create","flex","backgroundColor","alignItems","justifyContent","primaryText","margin","fontSize"],"sources":["C:/Users/admin/Desktop/Weather Forecast/weatherApp/App.js"],"sourcesContent":["import axios from 'axios';\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, ActivityIndicator } from 'react-native';\nimport Main from './components/main/Main';\nimport { WeatherService } from './services/weather.service';\n\n\nexport default function App() {\n\n  const [data, setWeatherData] = useState(null);\n\n  async function test(){\n    let weather = await WeatherService.getData('Kyiv');\n    setWeatherData(weather);\n  }\n  useEffect(() => {\n    const fetchData = async () => {\n      WeatherService.getData('Kyiv');\n    }\n    fetchData()\n  }, [])\n\n\n  if (data == null) {\n    return (\n      <View style={styles.container}>\n        <ActivityIndicator color='gray' size={36} />\n      </View>\n\n    )\n  }\n\n  // else if (weatherData === null) {\n  //   return (\n  //     <View style={styles.container}>\n  //       <Text style={styles.primaryText}>City Not Found! Try Different City</Text>\n  //     </View>\n  //   )\n  // }\n\n  return (\n    <View style={styles.container}>\n      {/* <Main weatherData={data}></Main> */}\n      {console.log(data.main.temp)}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  primaryText: {\n    margin: 20,\n    fontSize: 28\n  }\n});"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,iBAAA;AAEnD,OAAOC,IAAI;AACX,SAASC,cAAc;AAAqC,SAAAC,GAAA,IAAAC,IAAA;AAG5D,eAAe,SAASC,GAAGA,CAAA,EAAG;EAE5B,IAAAC,SAAA,GAA+BX,QAAQ,CAAC,IAAI,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAtCG,IAAI,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA;EAAmB,SAE/BI,IAAIA,CAAA;IAAA,OAAAC,KAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAF,MAAA;IAAAA,KAAA,GAAAG,iBAAA,CAAnB,aAAqB;MACnB,IAAIC,OAAO,SAASd,cAAc,CAACe,OAAO,CAAC,MAAM,CAAC;MAClDP,cAAc,CAACM,OAAO,CAAC;IACzB,CAAC;IAAA,OAAAJ,KAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EACDlB,SAAS,CAAC,YAAM;IACd,IAAMsB,SAAS;MAAA,IAAAC,IAAA,GAAAJ,iBAAA,CAAG,aAAY;QAC5Bb,cAAc,CAACe,OAAO,CAAC,MAAM,CAAC;MAChC,CAAC;MAAA,gBAFKC,SAASA,CAAA;QAAA,OAAAC,IAAA,CAAAN,KAAA,OAAAC,SAAA;MAAA;IAAA,GAEd;IACDI,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAGN,IAAIT,IAAI,IAAI,IAAI,EAAE;IAChB,OACEL,IAAA,CAACL,IAAI;MAACqB,KAAK,EAAEC,MAAM,CAACC,SAAU;MAAAC,QAAA,EAC5BnB,IAAA,CAACJ,iBAAiB;QAACwB,KAAK,EAAC,MAAM;QAACC,IAAI,EAAE;MAAG,CAAE;IAAC,CACxC,CAAC;EAGX;EAUA,OACErB,IAAA,CAACL,IAAI;IAACqB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAE3BG,OAAO,CAACC,GAAG,CAAClB,IAAI,CAACmB,IAAI,CAACC,IAAI;EAAC,CACxB,CAAC;AAEX;AAEA,IAAMR,MAAM,GAAGxB,UAAU,CAACiC,MAAM,CAAC;EAC/BR,SAAS,EAAE;IACTS,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDC,WAAW,EAAE;IACXC,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}