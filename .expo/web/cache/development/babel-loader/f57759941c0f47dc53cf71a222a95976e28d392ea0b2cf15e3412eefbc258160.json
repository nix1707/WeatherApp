{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport moment from 'moment';\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar WeatherItem = function WeatherItem(_ref) {\n  var title = _ref.title,\n    value = _ref.value,\n    unit = _ref.unit;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentDate = _useState2[0],\n    setCurrentDate = _useState2[1];\n  useEffect(function () {\n    var date = moment().utcOffset('+05:30').format(' hh:mm:ss a');\n    setCurrentDate(date);\n  }, []);\n  return _jsxs(View, {\n    style: styles.weatherItem,\n    children: [_jsx(Text, {\n      style: styles.weatherItemTitle,\n      children: title\n    }), _jsxs(Text, {\n      style: styles.weatherItemTitle,\n      children: [value, unit]\n    })]\n  });\n};\nvar DateTime = function DateTime(_ref2) {\n  var date = _ref2.date;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      children: [_jsx(View, {\n        children: _jsx(Text, {\n          style: styles.heading,\n          children: currentDate\n        })\n      }), _jsx(View, {\n        children: _jsx(Text, {\n          style: styles.subheading,\n          children: \"Monday, 7, June\"\n        })\n      }), _jsxs(View, {\n        style: styles.weatherItemContainer,\n        children: [_jsx(WeatherItem, {\n          title: \"Humidity\",\n          value: 79,\n          unit: \"%\"\n        }), _jsx(WeatherItem, {\n          title: \"Pressure\",\n          value: 1000,\n          unit: \"hPa\"\n        }), _jsx(WeatherItem, {\n          title: \"Sunrise\",\n          value: \"06:00\",\n          unit: \"am\"\n        }), _jsx(WeatherItem, {\n          title: \"Sunset\",\n          value: \"06:30\",\n          unit: \"pm\"\n        })]\n      })]\n    }), _jsxs(View, {\n      style: styles.rightAlign,\n      children: [_jsx(Text, {\n        style: styles.timezone,\n        children: \"Ukraine, Kyiv\"\n      }), _jsx(Text, {\n        style: styles.latlong,\n        children: \"4.22 EN 50e\"\n      })]\n    })]\n  });\n};\nexport default DateTime;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1.5,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    padding: 20\n  },\n  heading: {\n    fontSize: 45,\n    color: 'white',\n    fontWeight: '100'\n  },\n  subheading: {\n    fontSize: 25,\n    fontWeight: \"300\",\n    color: '#eee'\n  },\n  rightAlign: {\n    textAlign: 'right',\n    marginTop: 20\n  },\n  timezone: {\n    fontSize: 20,\n    color: 'white'\n  },\n  latlong: {\n    fontSize: 16,\n    fontWeight: '700',\n    color: 'white'\n  },\n  weatherItemContainer: {\n    backgroundColor: '#18181b99',\n    borderRadius: 10,\n    padding: 10,\n    marginTop: 10\n  },\n  weatherItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  weatherItemTitle: {\n    color: '#eee',\n    fontSize: 14,\n    fontWeight: '100'\n  }\n});","map":{"version":3,"names":["moment","React","useState","useEffect","View","Text","StyleSheet","jsx","_jsx","jsxs","_jsxs","WeatherItem","_ref","title","value","unit","_useState","_useState2","_slicedToArray","currentDate","setCurrentDate","date","utcOffset","format","style","styles","weatherItem","children","weatherItemTitle","DateTime","_ref2","container","heading","subheading","weatherItemContainer","rightAlign","timezone","latlong","create","flex","flexDirection","justifyContent","padding","fontSize","color","fontWeight","textAlign","marginTop","backgroundColor","borderRadius"],"sources":["C:/Users/admin/Desktop/Weather Forecast/weatherApp/components/DateTime.js"],"sourcesContent":["import moment from 'moment';\r\nimport React, {useState, useEffect} from 'react'\r\nimport { View, Text, StyleSheet } from 'react-native'\r\n\r\n\r\nconst WeatherItem = ({ title, value, unit }) => {\r\n\r\n    const [currentDate, setCurrentDate] = useState('');\r\n\r\n    useEffect(() => {\r\n        var date = moment()\r\n            .utcOffset('+05:30')\r\n            .format(' hh:mm:ss a');\r\n        setCurrentDate(date);\r\n    }, []);\r\n    return (\r\n        <View style={styles.weatherItem}>\r\n            <Text style={styles.weatherItemTitle}>{title}</Text>\r\n            <Text style={styles.weatherItemTitle}>{value}{unit}</Text>\r\n        </View>)\r\n}\r\n\r\nconst DateTime = ({date}) => {\r\n    return (\r\n        <View style={styles.container}>\r\n            <View>\r\n                <View>\r\n                    {/* <Text style={styles.heading}>12:30am</Text> */}\r\n                    <Text style={styles.heading}>{currentDate}</Text>\r\n                </View>\r\n                <View>\r\n                    <Text style={styles.subheading}>Monday, 7, June</Text>\r\n                </View>\r\n                <View style={styles.weatherItemContainer}>\r\n                    <WeatherItem title='Humidity' value={79} unit='%' />\r\n                    <WeatherItem title='Pressure' value={1000} unit='hPa' />\r\n                    <WeatherItem title='Sunrise' value='06:00' unit='am' />\r\n                    <WeatherItem title='Sunset' value='06:30' unit='pm' />\r\n                </View>\r\n            </View>\r\n            <View style={styles.rightAlign}>\r\n                <Text style={styles.timezone}>Ukraine, Kyiv</Text>\r\n                <Text style={styles.latlong}>4.22 EN 50e</Text>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default DateTime\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1.5,\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        padding: 20\r\n    },\r\n    heading: {\r\n        fontSize: 45,\r\n        color: 'white',\r\n        fontWeight: '100'\r\n    },\r\n    subheading: {\r\n        fontSize: 25,\r\n        fontWeight: \"300\",\r\n        color: '#eee'\r\n    },\r\n    rightAlign: {\r\n        textAlign: 'right',\r\n        marginTop: 20\r\n    },\r\n    timezone: {\r\n        fontSize: 20,\r\n        color: 'white'\r\n    },\r\n    latlong: {\r\n        fontSize: 16,\r\n        fontWeight: '700',\r\n        color: 'white'\r\n    },\r\n    weatherItemContainer: {\r\n        backgroundColor: '#18181b99',\r\n        borderRadius: 10,\r\n        padding: 10,\r\n        marginTop: 10\r\n    },\r\n    weatherItem: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between'\r\n    },\r\n    weatherItemTitle: {\r\n        color: '#eee',\r\n        fontSize: 14,\r\n        fontWeight: '100'\r\n    }\r\n})\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}