{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport moment from 'moment';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar DailyForecast = function DailyForecast(_ref) {\n  var data = _ref.data;\n  return _jsx(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    children: _jsx(DailyForecastItem, {\n      data: data\n    })\n  });\n};\nexport default DailyForecast;\nvar DailyForecastItem = function DailyForecastItem(_ref2) {\n  var data = _ref2.data;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedItemIndex = _useState2[0],\n    setSelectedItemIndex = _useState2[1];\n  var toggleSelectedItem = function toggleSelectedItem(index) {\n    setSelectedItemIndex(function (prevIndex) {\n      return prevIndex === index ? 0 : index;\n    });\n  };\n  return _jsx(_Fragment, {\n    children: data.forecast.forecastday.map(function (item, idx) {\n      return _jsx(TouchableHighlight, {\n        onPress: function onPress() {\n          return toggleSelectedItem(idx);\n        },\n        style: _objectSpread(_objectSpread({}, styles.dailyForecastItemContainer), {}, {\n          borderColor: idx === selectedItemIndex ? 'white' : '#1c0530'\n        }),\n        activeOpacity: 0.6,\n        underlayColor: \"rgba(0,0,0, 0.4)\",\n        children: _jsxs(View, {\n          children: [_jsx(LinearGradient, {\n            style: styles.dayGradient,\n            colors: ['#4e369e', '#b450e6'],\n            start: {\n              x: 0,\n              y: 0.75\n            },\n            end: {\n              x: 1,\n              y: 0.25\n            },\n            children: _jsx(Text, {\n              style: styles.day,\n              children: moment(item.date).format('dddd')\n            })\n          }), _jsx(Image, {\n            source: {\n              uri: `http:${item.day.condition.icon}`\n            },\n            style: styles.image\n          }), _jsxs(Text, {\n            style: styles.temp,\n            children: [\"Temp - \", item.day.avgtemp_c, \"\\xB0\"]\n          }), _jsxs(Text, {\n            style: styles.temp,\n            children: [\"Rain - \", item.day.daily_chance_of_rain, \"%\"]\n          })]\n        })\n      }, idx);\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  image: {\n    width: 100,\n    height: 100,\n    marginLeft: 10\n  },\n  dailyForecastItemContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    backgroundColor: 'rgba(0, 0, 0,0.45)',\n    borderRadius: 10,\n    borderColor: 'white',\n    borderWidth: 2,\n    padding: 20,\n    marginRight: 40\n  },\n  temp: {\n    fontSize: 18,\n    color: 'white',\n    fontWeight: '100',\n    textAlign: 'center'\n  },\n  dayGradient: {\n    color: 'white',\n    borderRadius: 50,\n    marginBottom: 15\n  },\n  day: {\n    padding: 10,\n    textAlign: 'center',\n    fontWeight: '200',\n    fontSize: 22,\n    color: 'white'\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","View","Text","Image","StyleSheet","TouchableHighlight","Alert","moment","LinearGradient","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","DailyForecast","_ref","data","style","flexDirection","children","DailyForecastItem","_ref2","_useState","_useState2","_slicedToArray","selectedItemIndex","setSelectedItemIndex","toggleSelectedItem","index","prevIndex","forecast","forecastday","map","item","idx","onPress","_objectSpread","styles","dailyForecastItemContainer","borderColor","activeOpacity","underlayColor","dayGradient","colors","start","x","y","end","day","date","format","source","uri","condition","icon","image","temp","avgtemp_c","daily_chance_of_rain","create","width","height","marginLeft","flex","justifyContent","backgroundColor","borderRadius","borderWidth","padding","marginRight","fontSize","color","fontWeight","textAlign","marginBottom"],"sources":["C:/Users/admin/Desktop/Weather Forecast/weatherApp/components/DailyForecast.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { View, Text, Image, StyleSheet, TouchableHighlight, Alert } from 'react-native'\r\nimport moment from 'moment'\r\nimport { LinearGradient } from 'expo-linear-gradient'\r\n\r\nconst DailyForecast = ({ data }) => {\r\n    return (\r\n        <View style={{ flexDirection: 'row' }}>\r\n            <DailyForecastItem data={data}></DailyForecastItem>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default DailyForecast\r\n\r\nconst DailyForecastItem = ({ data }) => {    \r\n    const [selectedItemIndex, setSelectedItemIndex] = useState(0);\r\n    \r\n    const toggleSelectedItem = (index) => {\r\n        setSelectedItemIndex((prevIndex) => (prevIndex === index ? 0 : index));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {data.forecast.forecastday.map((item, idx) => (\r\n                <TouchableHighlight\r\n                    onPress={() => toggleSelectedItem(idx)}\r\n                    style={{...styles.dailyForecastItemContainer, \r\n                        borderColor: idx === selectedItemIndex ? 'white' : '#1c0530'}}\r\n                    activeOpacity={0.6}\r\n                    underlayColor=\"rgba(0,0,0, 0.4)\"\r\n                    key={idx}>\r\n\r\n                    <View >\r\n                        <LinearGradient\r\n                            style={styles.dayGradient}\r\n                            colors={['#4e369e', '#b450e6']}\r\n                            start={{ x: 0, y: 0.75 }}\r\n                            end={{ x: 1, y: 0.25 }}  >\r\n                            <Text style={styles.day}>{moment(item.date).format('dddd')}</Text>\r\n                        </LinearGradient>\r\n                        <Image\r\n                            source={{ uri: `http:${item.day.condition.icon}` }}\r\n                            style={styles.image} />\r\n                        <Text style={styles.temp}>Temp - {item.day.avgtemp_c}&#176;</Text>\r\n                        <Text style={styles.temp}>Rain - {item.day.daily_chance_of_rain}%</Text>\r\n                    </View>\r\n                </TouchableHighlight>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    image: {\r\n        width: 100,\r\n        height: 100,\r\n        marginLeft: 10\r\n    },\r\n    dailyForecastItemContainer: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        // backgroundColor: '#00000033',\r\n        backgroundColor: 'rgba(0, 0, 0,0.45)',\r\n        borderRadius: 10,\r\n        borderColor: 'white',\r\n        borderWidth: 2,\r\n        padding: 20,\r\n        // marginLeft: 10,\r\n        marginRight: 40\r\n    },\r\n    temp: {\r\n        fontSize: 18,\r\n        color: 'white',\r\n        fontWeight: '100',\r\n        textAlign: 'center'\r\n    },\r\n    dayGradient: {\r\n        color: 'white',\r\n        borderRadius: 50,\r\n        marginBottom: 15,\r\n    },\r\n    day: {\r\n        padding: 10,\r\n        textAlign: 'center',\r\n        fontWeight: '200',\r\n        fontSize: 22,\r\n        color: 'white'\r\n    }\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}